name: i4-server

services:
  pusher:
    build: ./pusher
    ports:
      - "12001:12001"
    networks:
      - back-tier
  
  kafka:
    image: apache/kafka:3.8.0
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_CREATE_TOPICS: "docupl:1:1"
    #  - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: false
    ports:
      - "9092:9092"
    networks:
      - back-tier

  mongo:
    image: mongo:7.0.2
    environment:
      MONGO_INITDB_USERNAME: "admin"
      MONGO_INITDB_PASSWORD: "admin"
    ports:
      - "27017:27017"
    volumes:
      #- /Users/andnic/Documents/mongo-data-i4:/etc/mongo-data
      - ./mongo/init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - back-tier
    #command: ["mongod", "--dbpath", "/etc/mongo-data"]

networks:
  back-tier: {}